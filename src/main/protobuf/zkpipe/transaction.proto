syntax = "proto3";

package zkpipe;

message Id {
    string scheme = 1;
    string id = 2;
}
message ACL {
    int32 perms = 1;
    Id id = 2;
}

message CreateSession {
    int32 timeOut = 1;
}

message Create {
    string path = 1;
    bytes data = 2;
    repeated ACL acl = 3;
    bool ephemeral = 4;
    int32 parentCVersion = 5;
}

message CreateContainer {
    string path = 1;
    bytes data = 2;
    repeated ACL acl = 3;
    int32 parentCVersion = 4;
}

message Delete {
    string path = 1;
}

message SetData {
    string path = 1;
    bytes data = 2;
    int32 version = 3;
}

message CheckVersion {
    string path = 1;
    int32 version = 2;
}

message SetACL {
    string path = 1;
    repeated ACL acl = 2;
    int32 version = 3;
}

message Error {
    int32 errno = 1;
}

message Multi {
    repeated Transaction transactions = 1;
}

message Transaction {
    enum Type {
        NOTIFICATION = 0;
        CREATE = 1;
        DELETE = 2;
        EXISTS = 3;
        GETDATA = 4;
        SETDATA = 5;
        GETACL = 6;
        SETACL = 7;
        GETCHILDREN = 8;
        SYNC = 9;
        PING = 11;
        GETCHILDREN2 = 12;
        CHECK = 13;
        MULTI = 14;
        CREATE2 = 15;
        RECONFIG = 16;
        CHECKWATCHES = 17;
        REMOVEWATCHES = 18;
        CREATECONTAINER = 19;
        DELETECONTAINER = 20;
        AUTH = 100;
        SETWATCHES = 101;
        SASL = 102;
        CREATESESSION = -10;
        CLOSESESSION = -11;
        ERROR = -1;
    }

    message Raw {
        Type type = 1;
        bytes data = 2;
    }
    oneof record {
        Create create = 1;
        Delete delete = 2;
        SetData setData = 3;
        CheckVersion checkVersion = 4;
        SetACL setACL = 5;
        Multi multi = 6;
        CreateContainer createContainer = 7;
        CreateSession createSession = 8;
        Error error = 9;
        Raw raw = 10;
    }
}

message Header {
    int64 session = 1;
    int32 cxid = 2;
    int64 zxid = 3;
    int64 time = 4;
    string path = 5;
    Transaction.Type type = 6;
}

message Message {
    Header header = 1;
    Transaction record = 2;
}